ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.key"] = ''
ext["sonatypeStagingProfileId"] = ''
ext["snapshot"] = false
/*ext["signing.secretKeyRingFile"] = ''*/

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value -> ext[name] = value }
} else {
    ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
    ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
    ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
    ext["signing.key"] = System.getenv('SIGNING_KEY')
    /*ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')*/
}

/*ext["rootVersionName"] = PUBLISH_VERSION*/
if (snapshot.toBoolean()) {
    ext["coreVersionName"] = TESTCORE_LIB_PUBLISH_VERSION + '-SNAPSHOT'
    ext["uiVersionName"] = TESTUI_LIB_PUBLISH_VERSION + '-SNAPSHOT'
} else {
    ext["coreVersionName"] = TESTCORE_LIB_PUBLISH_VERSION
    ext["uiVersionName"] = TESTUI_LIB_PUBLISH_VERSION
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword

        }
    }
}
